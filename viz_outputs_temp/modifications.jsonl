{"ts": "2025-09-07T00:45:00.922584", "topic": "explain me projectile motion using cricket", "slide_id": 1, "slide_name": "Definition of Projectile Motion", "workdir": "C:\\Users\\kshit\\Downloads\\Extramarks\\task2\\extramarks\\viz_outputs_temp\\explain_me_projectile_motion_using_cricket\\01_Definition_of_Projectile_Motion", "source_image": "cricket_projectile_motion.png", "mod_instructions": "show the projectile with theta angle of 90 degree", "model_json": {"language": "python", "filename": "projectile_cricket_slide1_modified.py", "code": "import numpy as np\nimport matplotlib\nmatplotlib.use(\"Agg\")\nimport matplotlib.pyplot as plt\n\n# Parameters for vertical launch (theta = 90 degrees)\ng = 9.81  # m/s^2\nv0 = 20.8  # m/s, chosen to give an apex around ~22 m like the original figure\ntheta_deg = 90.0\ntheta = np.deg2rad(theta_deg)\n\n# Time of flight and trajectory\nt_flight = 2 * v0 * np.sin(theta) / g\nt = np.linspace(0, t_flight, 400)\nx = np.zeros_like(t)  # cos(90°) = 0, so no horizontal motion\ny = v0 * np.sin(theta) * t - 0.5 * g * t**2\ny = np.maximum(y, 0)  # keep above ground\n\n# Apex\nt_apex = v0 * np.sin(theta) / g\nx_apex = 0.0\ny_apex = v0 * np.sin(theta) * t_apex - 0.5 * g * t_apex**2\n\n# Figure\nfig, ax = plt.subplots(figsize=(12, 7))\n\n# Projectile path (vertical line)\nax.plot(x, y, color=\"#C2185B\", lw=4, solid_capstyle=\"round\", label=\"Ball trajectory (θ=90°)\")\n\n# Apex marker and label\nax.plot(x_apex, y_apex, \"ko\", ms=6)\nax.text(x_apex + 0.12, y_apex + 0.7, \"Highest point (apex)\", ha=\"left\", va=\"bottom\", fontsize=11)\n\n# Initial velocity arrow straight up\nax.annotate(\"\", xy=(0, min(8, y_apex*0.35)), xytext=(0, 0),\n            arrowprops=dict(arrowstyle='-|>', lw=3, color=\"#3E7CB1\"))\nax.text(0.15, min(8.5, y_apex*0.35 + 0.6), r\"Initial velocity $v_0$ at angle $\\theta = 90^\\circ$\",\n        color=\"#3E7CB1\", fontsize=11, va=\"bottom\")\n\n# Gravity arrow on the right side\nx_right = 2.4\nax.annotate(\"Gravity g pulls downward\", xy=(x_right, y_apex*0.65), xytext=(x_right, y_apex*0.95),\n            arrowprops=dict(arrowstyle='-|>', color='gray', lw=2), ha='center', va='center', color='gray', rotation=270)\n\n# Ground line\nx_min, x_max = -3.0, 3.0\nax.hlines(0, x_min, x_max, colors='darkgreen', lw=3)\n\n# Axes and labels\nax.set_xlim(x_min, x_max)\nax.set_ylim(0, max(26.0, float(y_apex) + 5.0))\nax.set_xlabel(\"Horizontal distance (m)\", fontsize=13)\nax.set_ylabel(\"Height (m)\", fontsize=13)\nax.set_title(\"Projectile Motion in Cricket: Vertical shot (θ=90°)\", fontsize=16, pad=12)\n\n# Explanatory text box\nexplain_text = (\n    \"After the bat strike and with θ = 90°, the ball is launched straight up.\\n\"\n    \"There is no horizontal motion (range ≈ 0). Gravity slows it to the apex\\n\"\n    \"and then brings it back down along the same vertical line.\"\n)\nax.text(x_min + 0.2, y_apex * 0.30, explain_text, fontsize=11,\n        bbox=dict(boxstyle='round', facecolor='white', alpha=0.9, edgecolor='lightgray'))\n\n# Tidy spines\nfor spine in ['top', 'right']:\n    ax.spines[spine].set_visible(False)\n\nfig.tight_layout()\nfig.savefig(\"projectile_cricket_slide1_modified.png\", dpi=200, bbox_inches=\"tight\")\n", "run_instructions": "python projectile_cricket_slide1_modified.py", "python_packages": ["matplotlib", "numpy"], "r_packages": [], "latex_requires": []}, "run_exit_code": 0, "stdout": "", "stderr": "", "final_artifacts": ["cricket_projectile_motion.png", "projectile_cricket_slide1_modified.png", "projectile_motion_cricket.png"]}
{"ts": "2025-09-07T00:49:20.023791", "topic": "explain me projectile motion using cricket", "slide_id": 1, "slide_name": "Definition of Projectile Motion", "workdir": "C:\\Users\\kshit\\Downloads\\Extramarks\\task2\\extramarks\\viz_outputs_temp\\explain_me_projectile_motion_using_cricket\\01_Definition_of_Projectile_Motion", "source_image": "cricket_projectile_motion.png", "mod_instructions": "show the projection with theta angle of 45 degrees", "model_json": {"language": "python", "filename": "projectile_motion_cricket_slide1_modified.py", "code": "import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Arc\n\n# Parameters for projectile motion\ntheta_deg = 45  # MODIFIED: explicit 45-degree launch angle\ntheta = np.deg2rad(theta_deg)\ng = 9.81  # m/s^2\n\n# Choose v0 so the range is around 120 m at 45 degrees\nR_target = 120.0\nv0 = np.sqrt(R_target * g)\n\n# Time of flight and trajectory\nT = 2 * v0 * np.sin(theta) / g\nt = np.linspace(0, T, 400)\nx = v0 * np.cos(theta) * t\ny = v0 * np.sin(theta) * t - 0.5 * g * t**2\n\n# Apex (highest point)\nt_apex = v0 * np.sin(theta) / g\nx_apex = v0 * np.cos(theta) * t_apex\ny_apex = v0 * np.sin(theta) * t_apex - 0.5 * g * t_apex**2\n\n# Figure\nplt.rcParams.update({\n    'font.size': 12,\n    'axes.spines.top': False,\n    'axes.spines.right': False\n})\nfig, ax = plt.subplots(figsize=(14, 8))\n\n# Ground line\nax.axhline(0, color='darkgreen', lw=2)\n\n# Trajectory\nax.plot(x, y, color='crimson', lw=4, solid_capstyle='round')\n\n# Apex marker and label\nax.scatter([x_apex], [y_apex], s=50, color='black', zorder=5)\nax.text(x_apex, y_apex + 1.0, 'Highest point (apex)', ha='center', va='bottom')\n\n# Gravity arrow annotation (downward)\nax.annotate('Gravity g pulls downward',\n            xy=(105, 14), xytext=(105, 24),\n            arrowprops=dict(arrowstyle='->', color='gray', lw=2),\n            ha='center', va='center', color='gray', rotation=90)\n\n# Initial velocity arrow at 45 degrees\narrow_len = 18\nx_arr = arrow_len * np.cos(theta)\ny_arr = arrow_len * np.sin(theta)\nax.annotate('', xy=(x_arr, y_arr), xytext=(0, 0),\n            arrowprops=dict(arrowstyle='-|>', lw=3, color='#4C8CCE'))\nax.text(x_arr * 0.9, y_arr * 0.9 + 0.5,\n        r'Initial velocity $v_0$ at angle $\\theta = 45^\\circ$',\n        color='#4C8CCE')\n\n# Angle arc showing 45 degrees\narc_radius = 10\narc = Arc((0, 0), 2*arc_radius, 2*arc_radius, angle=0, theta1=0, theta2=theta_deg,\n          color='gray', lw=2)\nax.add_patch(arc)\nax.text(arc_radius * 0.75 * np.cos(np.deg2rad(22.5)),\n        arc_radius * 0.75 * np.sin(np.deg2rad(22.5)),\n        r'$\\theta=45^\\circ$', color='gray', ha='center', va='center')\n\n# Explanatory textbox (definition)\nexplain = (\n    'After the bat strike, the ball is in projectile motion:\\n'\n    'it moves only under the influence of gravity (no more push),\\n'\n    'so its path is a curved, parabolic arc.'\n)\nax.text(8, 5.2, explain, ha='left', va='bottom',\n        bbox=dict(boxstyle='round', facecolor='white', alpha=0.9, edgecolor='#cccccc'))\n\n# Axes limits and labels\nax.set_xlim(0, 130)\nax.set_ylim(0, max(32, y_apex + 6))\nax.set_xlabel('Horizontal distance (m)')\nax.set_ylabel('Height (m)')\nax.set_title('Projectile Motion in Cricket: Ball path after the hit (gravity only)\\n(Launch angle explicitly set to 45°)')\n\nax.grid(alpha=0.2)\n\nplt.tight_layout()\nfig.savefig('projectile_motion_cricket_slide1_modified.png', dpi=200)\nprint('Saved figure: projectile_motion_cricket_slide1_modified.png')\n", "run_instructions": "Run: python projectile_motion_cricket_slide1_modified.py. The script saves projectile_motion_cricket_slide1_modified.png in the working directory.", "python_packages": ["matplotlib", "numpy"], "r_packages": [], "latex_requires": []}, "run_exit_code": 0, "stdout": "Saved figure: projectile_motion_cricket_slide1_modified.png\r\n", "stderr": "", "final_artifacts": ["cricket_projectile_motion.png", "projectile_cricket_slide1_modified.png", "projectile_motion_cricket.png", "projectile_motion_cricket_slide1_modified.png"]}
